---
// src/pages/auth-callback.astro
---

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Procesando...</title>
</head>
<body>
    <div id="loading" style="
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: #1a1a1a;
        color: white;
        font-family: Arial, sans-serif;
        text-align: center;
    ">
        <div>
            <div id="spinner" style="
                width: 50px;
                height: 50px;
                border: 5px solid #333;
                border-top: 5px solid #73A7DD;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                margin: 0 auto 20px;
            "></div>
            <p id="status">Procesando autenticaci√≥n...</p>
        </div>
    </div>

    <div id="messageModal" style="
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    ">
        <div style="
            background: #202127;
            padding: 40px;
            border-radius: 20px;
            text-align: center;
            max-width: 500px;
            margin: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.5);
        ">
            <div id="messageIcon" style="
                width: 80px;
                height: 80px;
                margin: 0 auto 20px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 40px;
            "></div>
            <h2 id="messageTitle" style="
                color: white;
                font-size: 24px;
                margin-bottom: 15px;
                font-weight: bold;
            "></h2>
            <p id="messageText" style="
                color: #ccc;
                font-size: 16px;
                line-height: 1.5;
                margin-bottom: 20px;
            "></p>
            <div style="
                width: 30px;
                height: 4px;
                background: #73A7DD;
                margin: 0 auto;
                border-radius: 2px;
            "></div>
        </div>
    </div>

    <style>
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
        }
        
        .fade-in {
            animation: fadeIn 0.3s ease-out;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.39.3/dist/umd/supabase.min.js"></script>
    <script is:inline>
        // @ts-nocheck
        console.log("üöÄ Iniciando auth-callback");
        
        (function() {
            const maxAttempts = 50;
            let attempts = 0;
            
            const initSupabase = setInterval(() => {
                attempts++;
                
                if (typeof supabase !== 'undefined') {
                    clearInterval(initSupabase);
                    console.log("‚úÖ Supabase cargado");
                    initAuth();
                } else if (attempts >= maxAttempts) {
                    clearInterval(initSupabase);
                    console.error("‚ùå No se pudo cargar Supabase");
                    showMessageDirect("error", "Error de Carga", "No se pudo cargar el sistema de autenticaci√≥n.", "/login");
                }
            }, 100);
        })();
        
        function showMessageDirect(type, title, message, redirectUrl) {
            const loading = document.getElementById("loading");
            if (loading) loading.style.display = "none";
            
            const messageModal = document.getElementById("messageModal");
            const messageIcon = document.getElementById("messageIcon");
            const messageTitle = document.getElementById("messageTitle");
            const messageText = document.getElementById("messageText");
            
            if (type === "success") {
                messageIcon.innerHTML = "‚úì";
                messageIcon.style.background = "linear-gradient(135deg, #4CAF50, #45a049)";
                messageTitle.style.color = "#4CAF50";
            } else {
                messageIcon.innerHTML = "‚úï";
                messageIcon.style.background = "linear-gradient(135deg, #f44336, #d32f2f)";
                messageTitle.style.color = "#f44336";
            }
            
            messageTitle.textContent = title;
            messageText.textContent = message;
            messageModal.style.display = "flex";
            
            setTimeout(() => {
                window.location.href = redirectUrl;
            }, 3000);
        }
        
        function initAuth() {
            const { createClient } = supabase;
            
            const supabaseUrl = "https://umoiqpsvrnfyqgdzxcjm.supabase.co";
            const supabaseAnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVtb2lxcHN2cm5meXFnZHp4Y2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0NDAzNzgsImV4cCI6MjA3MzAxNjM3OH0.fLwtrQJOOWh3_DevTdvrRlB3AgcY5UWBJnGDAX2OUcI";
            const supabaseClient = createClient(supabaseUrl, supabaseAnonKey);
            
            const messageModal = document.getElementById("messageModal");
            const messageIcon = document.getElementById("messageIcon");
            const messageTitle = document.getElementById("messageTitle");
            const messageText = document.getElementById("messageText");
            
            function showMessage(type, title, message, redirectUrl, delay = 4000) {
                console.log(`üì¢ ${type}: ${title}`);
                
                const loading = document.getElementById("loading");
                if (loading) loading.style.display = "none";
                
                if (type === "success") {
                    messageIcon.innerHTML = "‚úì";
                    messageIcon.style.background = "linear-gradient(135deg, #4CAF50, #45a049)";
                    messageTitle.style.color = "#4CAF50";
                } else {
                    messageIcon.innerHTML = "‚úï";
                    messageIcon.style.background = "linear-gradient(135deg, #f44336, #d32f2f)";
                    messageTitle.style.color = "#f44336";
                }
                
                messageTitle.textContent = title;
                messageText.textContent = message;
                messageModal.style.display = "flex";
                
                const modalDiv = messageModal.querySelector("div");
                if (modalDiv) modalDiv.classList.add("fade-in");
                
                setTimeout(() => {
                    console.log(`üîÑ Redirigiendo a: ${redirectUrl}`);
                    window.location.href = redirectUrl;
                }, delay);
            }
            
            async function handleAuthCallback() {
                console.log("üî• Procesando callback");
                
                try {
                    const { data, error } = await supabaseClient.auth.getSession();
                    
                    console.log("Session data:", data);
                    
                    if (error) {
                        console.error("‚ùå Error getSession:", error);
                        showMessage("error", "Error de Autenticaci√≥n", "Hubo un problema con la autenticaci√≥n. Int√©ntalo de nuevo.", "/login", 3000);
                        return;
                    }
                    
                    if (data.session) {
                        const user = data.session.user;
                        const authMode = localStorage.getItem("authMode");
                        
                        console.log("üë§ Usuario:", user.email);
                        console.log("üîë Modo:", authMode);
                        
                        const userCreatedAt = new Date(user.created_at);
                        const now = new Date();
                        const timeDiff = (now - userCreatedAt) / 1000;
                        
                        console.log("‚è∞ Tiempo desde creaci√≥n:", timeDiff, "segundos");
                        
                        if (authMode === "register") {
                            localStorage.removeItem("authMode");
                            
                            if (timeDiff < 30) {
                                showMessage("success", "¬°Registro Exitoso!", "¬°Felicidades! Te has registrado con Google exitosamente. Ahora puedes iniciar sesi√≥n.", "/login", 4000);
                            } else {
                                showMessage("error", "Usuario Ya Registrado", "Este correo ya est√° registrado. Ve al inicio de sesi√≥n para acceder a tu cuenta.", "/register", 4000);
                                await supabaseClient.auth.signOut();
                            }
                        } else if (authMode === "login") {
                            localStorage.removeItem("authMode");
                            
                            if (timeDiff < 30) {
                                showMessage("error", "Usuario No Registrado", "Este correo o usuario no est√° registrado. Por favor, reg√≠strate primero para crear tu cuenta.", "/login", 4000);
                                await supabaseClient.auth.signOut();
                            } else {
                                const userName = user.user_metadata?.full_name || user.email.split("@")[0];
                                showMessage("success", "¬°Bienvenido!", `¬°Hola ${userName}! Has iniciado sesi√≥n correctamente. Ser√°s redirigido a tu perfil.`, "/Perfil", 3000);
                            }
                        } else {
                            console.warn("‚ö†Ô∏è No authMode");
                            showMessage("error", "Error de Sesi√≥n", "No se pudo determinar el tipo de autenticaci√≥n. Int√©ntalo de nuevo.", "/login", 3000);
                        }
                    } else {
                        console.warn("‚ö†Ô∏è Sin sesi√≥n");
                        showMessage("error", "Sin Sesi√≥n", "No se encontr√≥ una sesi√≥n activa. Int√©ntalo de nuevo.", "/login", 3000);
                    }
                } catch (error) {
                    console.error("‚ùå Error:", error);
                    showMessage("error", "Error Inesperado", "Ocurri√≥ un error procesando la autenticaci√≥n. Int√©ntalo de nuevo.", "/login", 3000);
                }
            }

            handleAuthCallback();
        }
    </script>
</body>
</html>