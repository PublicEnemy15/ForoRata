---
// src/pages/auth-callback.astro
---

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Procesando...</title>
</head>
<body>
    <div id="loading" style="display: flex; justify-content: center; align-items: center; height: 100vh; background: #1a1a1a; color: white; font-family: Arial, sans-serif; text-align: center;">
        <div>
            <div style="width: 50px; height: 50px; border: 5px solid #333; border-top: 5px solid #73A7DD; border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto 20px;"></div>
            <p id="status">Procesando autenticación...</p>
        </div>
    </div>

    <div id="messageModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 1000; justify-content: center; align-items: center;">
        <div style="background: #202127; padding: 40px; border-radius: 20px; text-align: center; max-width: 500px; margin: 20px; box-shadow: 0 10px 30px rgba(0,0,0,0.5);">
            <div id="messageIcon" style="width: 80px; height: 80px; margin: 0 auto 20px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 40px;"></div>
            <h2 id="messageTitle" style="color: white; font-size: 24px; margin-bottom: 15px; font-weight: bold;"></h2>
            <p id="messageText" style="color: #ccc; font-size: 16px; line-height: 1.5; margin-bottom: 20px;"></p>
        </div>
    </div>

    <style>
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    </style>

    <script>
 // @ts-nocheck
        import { supabase } from '../lib/supabaseClient';

        console.log("=== SCRIPT INICIADO ===");
        console.log("URL:", window.location.href);
        console.log("Hash:", window.location.hash);
        
        const loading = document.getElementById("loading");
        const messageModal = document.getElementById("messageModal");
        const messageIcon = document.getElementById("messageIcon");
        const messageTitle = document.getElementById("messageTitle");
        const messageText = document.getElementById("messageText");
        
        function showMsg(type, title, msg, url) {
            console.log(`Mostrando mensaje: ${type} - ${title}`);
            if (loading) loading.style.display = "none";
            if (messageIcon) messageIcon.innerHTML = type === "success" ? "✓" : "✕";
            if (messageIcon) messageIcon.style.background = type === "success" ? "linear-gradient(135deg, #4CAF50, #45a049)" : "linear-gradient(135deg, #f44336, #d32f2f)";
            if (messageTitle) messageTitle.style.color = type === "success" ? "#4CAF50" : "#f44336";
            if (messageTitle) messageTitle.textContent = title;
            if (messageText) messageText.textContent = msg;
            if (messageModal) messageModal.style.display = "flex";
            setTimeout(() => window.location.href = url, 3000);
        }
        
        async function processAuth() {
            try {
                console.log("Esperando 1.5 segundos...");
                await new Promise(r => setTimeout(r, 1500));
                
                console.log("Obteniendo sesión...");
                const { data, error } = await supabase.auth.getSession();
                
                console.log("Datos recibidos:", data);
                console.log("Error recibido:", error);
                
                if (error || !data.session) {
                    console.log("No hay sesión válida");
                    showMsg("error", "Error", "No se encontró sesión", "/login");
                    return;
                }
                
                const user = data.session.user;
                const authMode = localStorage.getItem("authMode");
                const timeDiff = (new Date() - new Date(user.created_at)) / 1000;
                
                console.log("Usuario:", user.email);
                console.log("Modo:", authMode);
                console.log("Tiempo desde creación:", timeDiff, "segundos");
                
                localStorage.removeItem("authMode");
                
                if (authMode === "register") {
                    if (timeDiff < 60) {
                        showMsg("success", "¡Registro Exitoso!", "Te registraste con Google", "/login");
                    } else {
                        await supabase.auth.signOut();
                        showMsg("error", "Usuario Ya Registrado", "Este correo ya existe", "/login");
                    }
                } else if (authMode === "login") {
                    if (timeDiff < 60) {
                        await supabase.auth.signOut();
                        showMsg("error", "Usuario No Registrado", "Regístrate primero", "/register");
                    } else {
                        const userName = user.user_metadata?.full_name || user.email.split("@")[0];
                        showMsg("success", "¡Bienvenido!", `Hola ${userName}`, "/Perfil");
                    }
                } else {
                    showMsg("error", "Error", "Tipo de auth no determinado", "/login");
                }
            } catch (err) {
                console.error("ERROR CRÍTICO:", err);
                showMsg("error", "Error Inesperado", err.message, "/login");
            }
        }
        
        console.log("Ejecutando processAuth...");
        processAuth();
    </script>
</body>
</html>