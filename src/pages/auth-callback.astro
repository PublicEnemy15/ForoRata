---
// src/pages/auth-callback.astro
---

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Procesando...</title>
</head>
<body>
    <div id="loading" style="
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: #1a1a1a;
        color: white;
        font-family: Arial, sans-serif;
        text-align: center;
    ">
        <div>
            <div id="spinner" style="
                width: 50px;
                height: 50px;
                border: 5px solid #333;
                border-top: 5px solid #73A7DD;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                margin: 0 auto 20px;
            "></div>
            <p id="status">Procesando autenticación...</p>
        </div>
    </div>

    <!-- Modal para mostrar mensajes -->
    <div id="messageModal" style="
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    ">
        <div style="
            background: #202127;
            padding: 40px;
            border-radius: 20px;
            text-align: center;
            max-width: 500px;
            margin: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.5);
        ">
            <div id="messageIcon" style="
                width: 80px;
                height: 80px;
                margin: 0 auto 20px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 40px;
            "></div>
            <h2 id="messageTitle" style="
                color: white;
                font-size: 24px;
                margin-bottom: 15px;
                font-weight: bold;
            "></h2>
            <p id="messageText" style="
                color: #ccc;
                font-size: 16px;
                line-height: 1.5;
                margin-bottom: 20px;
            "></p>
            <div style="
                width: 30px;
                height: 4px;
                background: #73A7DD;
                margin: 0 auto;
                border-radius: 2px;
            "></div>
        </div>
    </div>

    <style>
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
        }
        
        .fade-in {
            animation: fadeIn 0.3s ease-out;
        }
    </style>

    <script>
// @ts-nocheck
import { createClient } from '@supabase/supabase-js';

console.log('=== INICIO DEBUG AUTH CALLBACK ===');

const supabaseUrl = "https://umoiqpsvrnfyqgdzxcjm.supabase.co";
const supabaseAnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVtb2lxcHN2cm5meXFnZHp4Y2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0NDAzNzgsImV4cCI6MjA3MzAxNjM3OH0.fLwtrQJOOWh3_DevTdvrRlB3AgcY5UWBJnGDAX2OUcI";

console.log('1. Creando cliente de Supabase...');
const supabase = createClient(supabaseUrl, supabaseAnonKey);
console.log('2. Cliente creado correctamente');

const statusP = document.getElementById("status");
const messageModal = document.getElementById("messageModal");
const messageIcon = document.getElementById("messageIcon");
const messageTitle = document.getElementById("messageTitle");
const messageText = document.getElementById("messageText");

console.log('3. Elementos del DOM obtenidos');

function showMessage(type, title, message, redirectUrl, delay = 4000) {
    console.log('showMessage llamado:', { type, title, message, redirectUrl, delay });
    document.getElementById("loading").style.display = "none";
    
    if (type === "success") {
        messageIcon.innerHTML = "✓";
        messageIcon.style.background = "linear-gradient(135deg, #4CAF50, #45a049)";
        messageTitle.style.color = "#4CAF50";
    } else {
        messageIcon.innerHTML = "✕";
        messageIcon.style.background = "linear-gradient(135deg, #f44336, #d32f2f)";
        messageTitle.style.color = "#f44336";
    }
    
    messageTitle.textContent = title;
    messageText.textContent = message;
    messageModal.style.display = "flex";
    messageModal.querySelector("div").classList.add("fade-in");
    
    setTimeout(() => {
        console.log('Redirigiendo a:', redirectUrl);
        window.location.href = redirectUrl;
    }, delay);
}

async function handleAuthCallback() {
    try {
        console.log('4. Iniciando handleAuthCallback...');
        console.log('5. URL actual:', window.location.href);
        console.log('6. Hash:', window.location.hash);
        console.log('7. Search:', window.location.search);
        
        console.log('8. Llamando a supabase.auth.getSession()...');
        const { data, error } = await supabase.auth.getSession();
        
        console.log('9. Respuesta de getSession:', { 
            hasData: !!data, 
            hasSession: !!data?.session,
            hasError: !!error,
            error: error 
        });
        
        if (error) {
            console.error('10. Error detectado en getSession:', error);
            showMessage("error", "Error de Autenticación", "Hubo un problema con la autenticación. Inténtalo de nuevo.", "/login", 3000);
            return;
        }
        
        if (data.session) {
            console.log('11. Sesión encontrada');
            const user = data.session.user;
            console.log('12. Usuario:', {
                id: user.id,
                email: user.email,
                created_at: user.created_at,
                full_name: user.user_metadata?.full_name
            });
            
            const authMode = localStorage.getItem("authMode");
            console.log('13. Modo de autenticación:', authMode);
            
            const userCreatedAt = new Date(user.created_at);
            const now = new Date();
            const timeDiff = (now - userCreatedAt) / 1000;
            console.log('14. Diferencia de tiempo:', timeDiff, 'segundos');
            
            if (authMode === "register") {
                console.log('15. Procesando REGISTRO...');
                localStorage.removeItem("authMode");
                
                if (timeDiff < 30) {
                    console.log('16. Usuario NUEVO - registro exitoso');
                    showMessage("success", "¡Registro Exitoso!", "¡Felicidades! Te has registrado con Google exitosamente. Ahora puedes iniciar sesión.", "/login", 4000);
                } else {
                    console.log('17. Usuario EXISTENTE - ya registrado');
                    showMessage("error", "Usuario Ya Registrado", "Este correo ya está registrado. Ve al inicio de sesión para acceder a tu cuenta.", "/register", 4000);
                    await supabase.auth.signOut();
                }
            } else if (authMode === "login") {
                console.log('18. Procesando LOGIN...');
                localStorage.removeItem("authMode");
                
                if (timeDiff < 30) {
                    console.log('19. Usuario NUEVO intentando login - debe registrarse');
                    showMessage("error", "Usuario No Registrado", "Este correo o usuario no está registrado. Por favor, regístrate primero para crear tu cuenta.", "/login", 4000);
                    await supabase.auth.signOut();
                } else {
                    console.log('20. Usuario EXISTENTE - login exitoso');
                    const userName = user.user_metadata?.full_name || user.email.split("@")[0];
                    console.log('21. Nombre de usuario:', userName);
                    showMessage("success", "¡Bienvenido!", `¡Hola ${userName}! Has iniciado sesión correctamente. Serás redirigido a tu perfil.`, "/Perfil", 3000);
                }
            } else {
                console.log('22. No hay modo de autenticación definido');
                showMessage("error", "Error de Sesión", "No se pudo determinar el tipo de autenticación. Inténtalo de nuevo.", "/login", 3000);
            }
        } else {
            console.log('23. No se encontró sesión');
            showMessage("error", "Sin Sesión", "No se encontró una sesión activa. Inténtalo de nuevo.", "/login", 3000);
        }
    } catch (error) {
        console.error('=== ERROR EN CATCH ===');
        console.error('Error completo:', error);
        console.error('Error name:', error?.name);
        console.error('Error message:', error?.message);
        console.error('Error stack:', error?.stack);
        console.error('Tipo de error:', typeof error);
        showMessage("error", "Error Inesperado", "Ocurrió un error procesando la autenticación. Inténtalo de nuevo.", "/login", 3000);
    }
}

console.log('24. Ejecutando handleAuthCallback...');
handleAuthCallback();
    </script>
</body>
</html>